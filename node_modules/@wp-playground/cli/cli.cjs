"use strict";const n=require("fs"),a=require("path"),l=require("yargs"),p=require("@php-wasm/universal"),d=require("@wp-playground/common"),c=require("./index.cjs");require("express");require("@php-wasm/logger");require("@wp-playground/blueprints");require("@php-wasm/progress");require("@php-wasm/node");require("@wp-playground/wordpress");require("tls");require("fs-extra");require("os");function f(e){return/^latest$|^trunk$|^nightly$|^(?:(\d+)\.(\d+)(?:\.(\d+))?)((?:-beta(?:\d+)?)|(?:-RC(?:\d+)?))?$/.test(e)}async function b(){const e=await l(process.argv.slice(2)).usage("Usage: wp-playground <command> [options]").positional("command",{describe:"Command to run",type:"string",choices:["server","run-blueprint","build-snapshot"]}).option("outfile",{describe:"When building, write to this output file.",type:"string",default:"wordpress.zip"}).option("port",{describe:"Port to listen on when serving.",type:"number",default:9400}).option("php",{describe:"PHP version to use.",type:"string",default:d.RecommendedPHPVersion,choices:p.SupportedPHPVersions}).option("wp",{describe:"WordPress version to use.",type:"string",default:"latest"}).option("mount",{describe:"Mount a directory to the PHP runtime. You can provide --mount multiple times. Format: /host/path:/vfs/path",type:"array",string:!0}).option("mountBeforeInstall",{describe:"Mount a directory to the PHP runtime before installing WordPress. You can provide --mount-before-install multiple times. Format: /host/path:/vfs/path",type:"array",string:!0}).option("login",{describe:"Should log the user in",type:"boolean",default:!1}).option("blueprint",{describe:"Blueprint to execute.",type:"string"}).option("skipWordPressSetup",{describe:"Do not download, unzip, and install WordPress. Useful for mounting a pre-configured WordPress directory at /wordpress.",type:"boolean",default:!1}).option("quiet",{describe:"Do not output logs and progress messages.",type:"boolean",default:!1}).option("debug",{describe:"Print PHP error log content if an error occurs during Playground boot.",type:"boolean",default:!1}).showHelpOnFail(!1).check(r=>{if(r.wp!==void 0&&!f(r.wp))try{new URL(r.wp)}catch{throw new Error('Unrecognized WordPress version. Please use "latest", a URL, or a numeric version such as "6.2", "6.0.1", "6.2-beta1", or "6.2-RC1"')}if(r.blueprint!==void 0){const o=a.resolve(process.cwd(),r.blueprint);if(!n.existsSync(o))throw new Error("Blueprint file does not exist");const u=n.readFileSync(o,"utf-8");try{r.blueprint=JSON.parse(u)}catch{throw new Error("Blueprint file is not a valid JSON file")}}return!0});e.wrap(e.terminalWidth());const t=await e.argv,i=t._[0];["run-blueprint","server","build-snapshot"].includes(i)||(e.showHelp(),process.exit(1));const s={...t,command:i};return await c.runCLI(s)}b();
//# sourceMappingURL=cli.cjs.map
