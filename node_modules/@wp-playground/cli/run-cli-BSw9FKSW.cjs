"use strict";const p=require("@php-wasm/logger"),H=require("@php-wasm/node"),x=require("@php-wasm/progress"),z=require("@php-wasm/universal"),b=require("@wp-playground/blueprints"),q=require("@wp-playground/common"),B=require("@wp-playground/wordpress"),d=require("fs"),f=require("path"),L=require("tls"),P=require("fs-extra"),T=require("os"),U=require("express");function Z(e){const t=process.cwd(),n=[...e.mount||[]],o=[...e.mountBeforeInstall||[]];if(M(t)){const r=f.basename(t);n.push({hostPath:t,vfsPath:`/wordpress/wp-content/plugins/${r}`})}else if(F(t)){const r=f.basename(t);n.push({hostPath:t,vfsPath:`/wordpress/wp-content/themes/${r}`})}else if(C(t))n.push(...E(t));else if(S(t)){const r=d.readdirSync(t),l=[];for(const s of r)s.startsWith("wp-content")||l.push({hostPath:`${t}/${s}`,vfsPath:`/wordpress/${s}`});o.push(...l,...E(f.join(t,"wp-content")))}else n.push({hostPath:t,vfsPath:"/wordpress"});const i=e.blueprint||{};i.steps=[...i.steps||[],...j(t)];const a=e.skipWordPressSetup||S(t);return{...e,blueprint:i,mount:n,mountBeforeInstall:o,skipWordPressSetup:a}}function S(e){const t=d.readdirSync(e);return t.includes("wp-admin")&&t.includes("wp-includes")&&t.includes("wp-content")}function C(e){const t=d.readdirSync(e);return t.includes("themes")||t.includes("plugins")||t.includes("mu-plugins")||t.includes("uploads")}function F(e){if(!d.readdirSync(e).includes("style.css"))return!1;const n=d.readFileSync(f.join(e,"style.css"),"utf8");return!!/^(?:[ \t]*<\?php)?[ \t/*#@]*Theme Name:(.*)$/im.exec(n)}function M(e){const t=d.readdirSync(e),n=/^(?:[ \t]*<\?php)?[ \t/*#@]*Plugin Name:(.*)$/im;return!!t.filter(i=>i.endsWith(".php")).find(i=>{const a=d.readFileSync(f.join(e,i),"utf8");return!!n.exec(a)})}function E(e){return d.readdirSync(e).filter(n=>!n.startsWith("index.php")).map(n=>({hostPath:`${e}/${n}`,vfsPath:`/wordpress/wp-content/${n}`}))}function j(e){return M(e)?[{step:"activatePlugin",pluginPath:`/wordpress/wp-content/plugins/${f.basename(e)}`}]:F(e)?[{step:"activateTheme",themeFolderName:f.basename(e)}]:C(e)||S(e)?[{step:"runPHP",code:`<?php
					require_once '/wordpress/wp-load.php';
					$theme = wp_get_theme();
					if (!$theme->exists()) {
						$themes = wp_get_themes();
						if (count($themes) > 0) {
							$themeName = array_keys($themes)[0];
							switch_theme($themeName);
						}
					}
				`}]:[]}const W=f.join(T.homedir(),".wordpress-playground");async function V(e){return await D("https://github.com/WordPress/sqlite-database-integration/archive/refs/heads/develop.zip","sqlite.zip",e)}async function D(e,t,n){const o=f.join(W,t);return P.existsSync(o)||(P.ensureDirSync(W),await G(e,o,n)),_(o)}async function G(e,t,n){const i=(await n.monitorFetch(fetch(e))).body.getReader(),a=`${t}.partial`,r=P.createWriteStream(a);for(;;){const{done:l,value:s}=await i.read();if(s&&r.write(s),l)break}r.close(),r.closed||await new Promise((l,s)=>{r.on("finish",()=>{P.renameSync(a,t),l(null)}),r.on("error",c=>{P.removeSync(a),s(c)})})}function _(e,t){return new File([P.readFileSync(e)],f.basename(e))}async function O(e){const t=U(),n=await new Promise((a,r)=>{const l=t.listen(e.port,()=>{const s=l.address();s===null||typeof s=="string"?r(new Error("Server address is not available")):a(l)})});t.use("/",async(a,r)=>{const l=await e.handleRequest({url:a.url,headers:J(a),method:a.method,body:await Y(a)});r.statusCode=l.httpStatusCode;for(const s in l.headers)r.setHeader(s,l.headers[s]);r.end(l.bytes)});const i=n.address().port;return await e.onBind(n,i)}const Y=async e=>await new Promise(t=>{const n=[];e.on("data",o=>{n.push(o)}),e.on("end",()=>{t(new Uint8Array(Buffer.concat(n)))})}),J=e=>{const t={};if(e.rawHeaders&&e.rawHeaders.length)for(let n=0;n<e.rawHeaders.length;n+=2)t[e.rawHeaders[n].toLowerCase()]=e.rawHeaders[n+1];return t};function K(e){const t=[];for(const n of e){const o=n.split(":");if(o.length!==2)throw new Error(`Invalid mount format: ${n}.
				Expected format: /host/path:/vfs/path.
				If your path contains a colon, e.g. C:\\myplugin, use the --mount-dir option instead.
				Example: --mount-dir C:\\my-plugin /wordpress/wp-content/plugins/my-plugin`);const[i,a]=o;if(!d.existsSync(i))throw new Error(`Host path does not exist: ${i}`);t.push({hostPath:i,vfsPath:a})}return t}function Q(e){if(e.length%2!==0)throw new Error("Invalid mount format. Expected: /host/path /vfs/path");const t=[];for(let n=0;n<e.length;n+=2){const o=e[n],i=e[n+1];if(!d.existsSync(o))throw new Error(`Host path does not exist: ${o}`);t.push({hostPath:f.resolve(process.cwd(),o),vfsPath:i})}return t}function I(e,t){for(const n of t)e.mkdir(n.vfsPath),e.mount(n.vfsPath,H.createNodeFsMountHandler(n.hostPath))}async function X(e){e.autoMount&&(e=Z(e));async function t(s){const{php:c,reap:h}=await r.processManager.acquirePHPInstance();try{await c.run({code:`<?php
				$zip = new ZipArchive();
				if(false === $zip->open('/tmp/build.zip', ZipArchive::CREATE | ZipArchive::OVERWRITE)) {
					throw new Exception('Failed to create ZIP');
				}
				$files = new RecursiveIteratorIterator(
					new RecursiveDirectoryIterator('/wordpress')
				);
				foreach ($files as $file) {
					echo $file . PHP_EOL;
					if (!$file->isFile()) {
						continue;
					}
					$zip->addFile($file->getPathname(), $file->getPathname());
				}
				$zip->close();

			`});const u=c.readFileAsBuffer("/tmp/build.zip");d.writeFileSync(s,u)}finally{h()}}async function n(){const s=b.isBlueprintBundle(e.blueprint)?e.blueprint:{login:e.login,...e.blueprint,preferredVersions:{php:e.php??e?.blueprint?.preferredVersions?.php??q.RecommendedPHPVersion,wp:e.wp??e?.blueprint?.preferredVersions?.wp??"latest",...e.blueprint?.preferredVersions||{}}},c=new x.ProgressTracker;let h="",u=!1;return c.addEventListener("progress",m=>{if(u)return;u=m.detail.progress===100;const g=Math.floor(m.detail.progress);h=m.detail.caption||h||"Running the Blueprint";const v=`${h.trim()} â€“ ${g}%`;e.quiet||i(process.stdout,v,u)}),await b.compileBlueprint(s,{progress:c})}let o="";function i(s,c,h){c!==o&&(o=c,s.isTTY?(s.cursorTo(0),s.write(c),s.clearLine(1),h&&s.write(`
`)):s.write(`${c}
`))}e.quiet&&(p.logger.handlers=[]);const a=await n();let r,l=!1;return p.logger.log("Starting a PHP server..."),O({port:e.port,onBind:async(s,c)=>{const h=`http://127.0.0.1:${c}`;p.logger.log(`Setting up WordPress ${e.wp}`);let u;const m=new x.EmscriptenDownloadMonitor;if(!e.skipWordPressSetup){let w=!1;m.addEventListener("progress",y=>{if(w)return;const{loaded:A,total:k}=y.detail,R=Math.floor(Math.min(100,100*A/k));w=R===100,e.quiet||i(process.stdout,`Downloading WordPress ${R}%...`,w)}),u=await B.resolveWordPressRelease(e.wp)}p.logger.log(`Resolved WordPress release URL: ${u?.releaseUrl}`);const g=u&&f.join(W,`prebuilt-wp-content-for-wp-${u.version}.zip`),v=u?d.existsSync(g)?_(g):await D(u.releaseUrl,`${u.version}.zip`,m):void 0,N={WP_DEBUG:!0,WP_DEBUG_LOG:!0,WP_DEBUG_DISPLAY:!1};p.logger.log("Booting WordPress..."),r=await B.bootWordPress({siteUrl:h,createPhpRuntime:async()=>await H.loadNodeRuntime(a.versions.php,{followSymlinks:e.followSymlinks===!0}),wordPressZip:v,sqliteIntegrationPluginZip:e.skipSqliteSetup?void 0:V(m),sapiName:"cli",createFiles:{"/internal/shared/ca-bundle.crt":L.rootCertificates.join(`
`)},constants:N,phpIniEntries:{"openssl.cafile":"/internal/shared/ca-bundle.crt",allow_url_fopen:"1",disable_functions:""},hooks:{async beforeWordPressFiles(w){e.mountBeforeInstall&&I(w,e.mountBeforeInstall)}},cookieStore:!1}),p.logger.log("Booted!");const $=await r.getPrimaryPhp();try{if(u&&!e.mountBeforeInstall&&!d.existsSync(g)&&(p.logger.log("Caching preinstalled WordPress for the next boot..."),d.writeFileSync(g,await q.zipDirectory($,"/wordpress")),p.logger.log("Cached!")),e.mount&&I($,e.mount),l=!0,a){const{php:w,reap:y}=await r.processManager.acquirePHPInstance();try{p.logger.log("Running the Blueprint..."),await b.runBlueprintSteps(a,w),p.logger.log("Finished running the blueprint")}finally{y()}}return e.command==="build-snapshot"?(await t(e.outfile),p.logger.log(`WordPress exported to ${e.outfile}`),process.exit(0)):e.command==="run-blueprint"?(p.logger.log("Blueprint executed"),process.exit(0)):p.logger.log(`WordPress is running on ${h}`),{requestHandler:r,server:s}}catch(w){if(!e.debug)throw w;const y=$.readFileAsText(p.errorLogPath);throw new Error(y,{cause:w})}},async handleRequest(s){return l?await r.request(s):z.PHPResponse.forHttpCode(502,"WordPress is not ready yet")}})}exports.parseMountDirArguments=Q;exports.parseMountWithDelimiterArguments=K;exports.runCLI=X;
//# sourceMappingURL=run-cli-BSw9FKSW.cjs.map
