"use strict";const d=require("@php-wasm/logger"),B=require("@php-wasm/node"),I=require("@php-wasm/progress"),L=require("@php-wasm/universal"),S=require("@wp-playground/blueprints"),F=require("@wp-playground/common"),x=require("@wp-playground/wordpress"),h=require("fs"),w=require("path"),A=require("tls"),y=require("fs-extra"),T=require("os"),U=require("express");function Z(e){const t=process.cwd(),n=[...e.mount||[]],c=[...e.mountBeforeInstall||[]];if(_(t)){const r=w.basename(t);n.push(`${t}:/wordpress/wp-content/plugins/${r}`)}else if(E(t)){const r=w.basename(t);n.push(`${t}:/wordpress/wp-content/themes/${r}`)}else if(C(t))n.push(...H(t));else if(R(t)){const r=h.readdirSync(t),s=[];for(const a of r)a.startsWith("wp-content")||s.push(`${t}/${a}:/wordpress/${a}`);c.push(...s,...H(w.join(t,"wp-content")))}else n.push(`${t}:/wordpress`);const u=e.blueprint||{};u.steps=[...u.steps||[],...j(t)];const l=e.skipWordPressSetup||R(t);return{...e,blueprint:u,mount:n,mountBeforeInstall:c,skipWordPressSetup:l}}function R(e){const t=h.readdirSync(e);return t.includes("wp-admin")&&t.includes("wp-includes")&&t.includes("wp-content")}function C(e){const t=h.readdirSync(e);return t.includes("themes")||t.includes("plugins")||t.includes("mu-plugins")||t.includes("uploads")}function E(e){if(!h.readdirSync(e).includes("style.css"))return!1;const n=h.readFileSync(w.join(e,"style.css"),"utf8");return!!/^(?:[ \t]*<\?php)?[ \t/*#@]*Theme Name:(.*)$/im.exec(n)}function _(e){const t=h.readdirSync(e),n=/^(?:[ \t]*<\?php)?[ \t/*#@]*Plugin Name:(.*)$/im;return!!t.filter(u=>u.endsWith(".php")).find(u=>{const l=h.readFileSync(w.join(e,u),"utf8");return!!n.exec(l)})}function H(e){return h.readdirSync(e).filter(n=>!n.startsWith("index.php")).map(n=>`${e}/${n}:/wordpress/wp-content/${n}`)}function j(e){return _(e)?[{step:"activatePlugin",pluginPath:`/wordpress/wp-content/plugins/${w.basename(e)}`}]:E(e)?[{step:"activateTheme",themeFolderName:w.basename(e)}]:C(e)||R(e)?[{step:"runPHP",code:`<?php
					require_once '/wordpress/wp-load.php';
					$theme = wp_get_theme();
					if (!$theme->exists()) {
						$themes = wp_get_themes();
						if (count($themes) > 0) {
							$themeName = array_keys($themes)[0];
							switch_theme($themeName);
						}
					}
				`}]:[]}const W=w.join(T.homedir(),".wordpress-playground");async function V(e){return await N("https://github.com/Automattic/sqlite-database-integration/archive/refs/heads/develop.zip","sqlite.zip",e)}async function N(e,t,n){const c=w.join(W,t);return y.existsSync(c)||(y.ensureDirSync(W),await G(e,c,n)),k(c)}async function G(e,t,n){const u=(await n.monitorFetch(fetch(e))).body.getReader(),l=`${t}.partial`,r=y.createWriteStream(l);for(;;){const{done:s,value:a}=await u.read();if(a&&r.write(a),s)break}r.close(),r.closed||await new Promise((s,a)=>{r.on("finish",()=>{y.renameSync(l,t),s(null)}),r.on("error",i=>{y.removeSync(l),a(i)})})}function k(e,t){return new File([y.readFileSync(e)],w.basename(e))}async function O(e){const t=U(),n=await new Promise((l,r)=>{const s=t.listen(e.port,()=>{const a=s.address();a===null||typeof a=="string"?r(new Error("Server address is not available")):l(s)})});t.use("/",async(l,r)=>{const s=await e.handleRequest({url:l.url,headers:J(l),method:l.method,body:await Y(l)});r.statusCode=s.httpStatusCode;for(const a in s.headers)r.setHeader(a,s.headers[a]);r.end(s.bytes)});const u=n.address().port;return await e.onBind(n,u)}const Y=async e=>await new Promise(t=>{const n=[];e.on("data",c=>{n.push(c)}),e.on("end",()=>{t(new Uint8Array(Buffer.concat(n)))})}),J=e=>{const t={};if(e.rawHeaders&&e.rawHeaders.length)for(let n=0;n<e.rawHeaders.length;n+=2)t[e.rawHeaders[n].toLowerCase()]=e.rawHeaders[n+1];return t};async function K(e){e.autoMount&&(e=Z(e));async function t(i){const{php:p,reap:f}=await s.processManager.acquirePHPInstance();try{await p.run({code:`<?php
				$zip = new ZipArchive();
				if(false === $zip->open('/tmp/build.zip', ZipArchive::CREATE | ZipArchive::OVERWRITE)) {
					throw new Exception('Failed to create ZIP');
				}
				$files = new RecursiveIteratorIterator(
					new RecursiveDirectoryIterator('/wordpress')
				);
				foreach ($files as $file) {
					echo $file . PHP_EOL;
					if (!$file->isFile()) {
						continue;
					}
					$zip->addFile($file->getPathname(), $file->getPathname());
				}
				$zip->close();

			`});const o=p.readFileAsBuffer("/tmp/build.zip");h.writeFileSync(i,o)}finally{f()}}function n(i,p){const f=p.map(o=>{const[g,P]=o.split(":");return{hostPath:w.resolve(process.cwd(),g),vfsPath:P}});for(const o of f)i.mkdir(o.vfsPath),i.mount(o.vfsPath,B.createNodeFsMountHandler(o.hostPath))}async function c(){const i=S.isBlueprintBundle(e.blueprint)?e.blueprint:{login:e.login,...e.blueprint,preferredVersions:{php:e.php??e?.blueprint?.preferredVersions?.php??F.RecommendedPHPVersion,wp:e.wp??e?.blueprint?.preferredVersions?.wp??"latest",...e.blueprint?.preferredVersions||{}}},p=new I.ProgressTracker;let f="",o=!1;return p.addEventListener("progress",g=>{if(o)return;o=g.detail.progress===100;const P=Math.floor(g.detail.progress);f=g.detail.caption||f||"Running the Blueprint";const b=`${f.trim()} â€“ ${P}%`;e.quiet||l(process.stdout,b,o)}),await S.compileBlueprint(i,{progress:p})}let u="";function l(i,p,f){p!==u&&(u=p,i.isTTY?(i.cursorTo(0),i.write(p),i.clearLine(1),f&&i.write(`
`)):i.write(`${p}
`))}e.quiet&&(d.logger.handlers=[]);const r=await c();let s,a=!1;return d.logger.log("Starting a PHP server..."),O({port:e.port,onBind:async(i,p)=>{const f=`http://127.0.0.1:${p}`;d.logger.log(`Setting up WordPress ${e.wp}`);let o;const g=new I.EmscriptenDownloadMonitor;if(!e.skipWordPressSetup){let m=!1;g.addEventListener("progress",$=>{if(m)return;const{loaded:M,total:z}=$.detail,q=Math.floor(Math.min(100,100*M/z));m=q===100,e.quiet||l(process.stdout,`Downloading WordPress ${q}%...`,m)}),o=await x.resolveWordPressRelease(e.wp)}d.logger.log(`Resolved WordPress release URL: ${o?.releaseUrl}`);const P=o&&w.join(W,`prebuilt-wp-content-for-wp-${o.version}.zip`),b=o?h.existsSync(P)?k(P):await N(o.releaseUrl,`${o.version}.zip`,g):void 0,D={WP_DEBUG:!0,WP_DEBUG_LOG:!0,WP_DEBUG_DISPLAY:!1};d.logger.log("Booting WordPress..."),s=await x.bootWordPress({siteUrl:f,createPhpRuntime:async()=>await B.loadNodeRuntime(r.versions.php,{followSymlinks:e.followSymlinks===!0}),wordPressZip:b,sqliteIntegrationPluginZip:e.skipSqliteSetup?void 0:V(g),sapiName:"cli",createFiles:{"/internal/shared/ca-bundle.crt":A.rootCertificates.join(`
`)},constants:D,phpIniEntries:{"openssl.cafile":"/internal/shared/ca-bundle.crt",allow_url_fopen:"1",disable_functions:""},hooks:{async beforeWordPressFiles(m){e.mountBeforeInstall&&n(m,e.mountBeforeInstall)}},cookieStore:!1}),d.logger.log("Booted!");const v=await s.getPrimaryPhp();try{if(o&&!e.mountBeforeInstall&&!h.existsSync(P)&&(d.logger.log("Caching preinstalled WordPress for the next boot..."),h.writeFileSync(P,await F.zipDirectory(v,"/wordpress")),d.logger.log("Cached!")),e.mount&&n(v,e.mount),a=!0,r){const{php:m,reap:$}=await s.processManager.acquirePHPInstance();try{d.logger.log("Running the Blueprint..."),await S.runBlueprintSteps(r,m),d.logger.log("Finished running the blueprint")}finally{$()}}return e.command==="build-snapshot"?(await t(e.outfile),d.logger.log(`WordPress exported to ${e.outfile}`),process.exit(0)):e.command==="run-blueprint"?(d.logger.log("Blueprint executed"),process.exit(0)):d.logger.log(`WordPress is running on ${f}`),{requestHandler:s,server:i}}catch(m){if(!e.debug)throw m;const $=v.readFileAsText(d.errorLogPath);throw new Error($,{cause:m})}},async handleRequest(i){return a?await s.request(i):L.PHPResponse.forHttpCode(502,"WordPress is not ready yet")}})}exports.runCLI=K;
//# sourceMappingURL=run-cli-D-8hdNJ9.cjs.map
