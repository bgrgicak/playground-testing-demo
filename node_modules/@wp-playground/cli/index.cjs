"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const b=require("fs"),m=require("path"),D=require("express"),x=require("@php-wasm/universal"),l=require("@php-wasm/logger"),B=require("@wp-playground/blueprints"),W=require("@php-wasm/progress"),H=require("@php-wasm/node"),I=require("@wp-playground/common"),E=require("@wp-playground/wordpress"),A=require("tls"),P=require("fs-extra"),M=require("os");async function U(e){const s=D(),n=await new Promise((c,i)=>{const o=s.listen(e.port,()=>{const d=o.address();d===null||typeof d=="string"?i(new Error("Server address is not available")):c(o)})});s.use("/",async(c,i)=>{const o=await e.handleRequest({url:c.url,headers:T(c),method:c.method,body:await _(c)});i.statusCode=o.httpStatusCode;for(const d in o.headers)i.setHeader(d,o.headers[d]);i.end(o.bytes)});const g=n.address().port;return await e.onBind(n,g)}const _=async e=>await new Promise(s=>{const n=[];e.on("data",f=>{n.push(f)}),e.on("end",()=>{s(new Uint8Array(Buffer.concat(n)))})}),T=e=>{const s={};if(e.rawHeaders&&e.rawHeaders.length)for(let n=0;n<e.rawHeaders.length;n+=2)s[e.rawHeaders[n].toLowerCase()]=e.rawHeaders[n+1];return s},$=m.join(M.homedir(),".wordpress-playground");async function Z(e){return await S("https://github.com/WordPress/sqlite-database-integration/archive/refs/heads/main.zip","sqlite.zip",e)}async function S(e,s,n){const f=m.join($,s);return P.existsSync(f)||(P.ensureDirSync($),await k(e,f,n)),F(f)}async function k(e,s,n){const g=(await n.monitorFetch(fetch(e))).body.getReader(),c=`${s}.partial`,i=P.createWriteStream(c);for(;;){const{done:o,value:d}=await g.read();if(d&&i.write(d),o)break}i.close(),i.closed||await new Promise((o,d)=>{i.on("finish",t=>{t?(P.removeSync(c),d(t)):(P.renameSync(c,s),o(null))})})}function F(e,s){return new File([P.readFileSync(e)],s??m.basename(e))}async function j(e){e.quiet&&(l.logger.handlers=[]);async function s(t){const{php:a,reap:p}=await o.processManager.acquirePHPInstance();try{await a.run({code:`<?php
				$zip = new ZipArchive();
				if(false === $zip->open('/tmp/build.zip', ZipArchive::CREATE | ZipArchive::OVERWRITE)) {
					throw new Exception('Failed to create ZIP');
				}
				$files = new RecursiveIteratorIterator(
					new RecursiveDirectoryIterator('/wordpress')
				);
				foreach ($files as $file) {
					echo $file . PHP_EOL;
					if (!$file->isFile()) {
						continue;
					}
					$zip->addFile($file->getPathname(), $file->getPathname());
				}
				$zip->close();

			`});const r=a.readFileAsBuffer("/tmp/build.zip");b.writeFileSync(t,r)}finally{p()}}function n(t,a){const p=a.map(r=>{const[h,w]=r.split(":");return{hostPath:m.resolve(process.cwd(),h),vfsPath:w}});for(const r of p)t.mkdir(r.vfsPath),t.mount(r.vfsPath,H.createNodeFsMountHandler(r.hostPath))}function f(){let t;e.blueprint?t=e.blueprint:t={preferredVersions:{php:e.php??I.RecommendedPHPVersion,wp:e.wp??"latest"},login:e.login};const a=new W.ProgressTracker;let p="",r=!1;return a.addEventListener("progress",h=>{if(r)return;r=h.detail.progress===100;const w=Math.floor(h.detail.progress);p=h.detail.caption||p||"Running the Blueprint";const v=`${p.trim()} â€“ ${w}%`;e.quiet||c(process.stdout,v,r)}),B.compileBlueprint(t,{progress:a})}let g="";function c(t,a,p){a!==g&&(g=a,t.isTTY?(t.cursorTo(0),t.write(a),t.clearLine(1),p&&t.write(`
`)):t.write(`${a}
`))}const i=f();let o,d=!1;return l.logger.log("Starting a PHP server..."),U({port:e.port,onBind:async(t,a)=>{const p=`http://127.0.0.1:${a}`;l.logger.log(`Setting up WordPress ${e.wp}`);let r;const h=new W.EmscriptenDownloadMonitor;if(!e.skipWordPressSetup){let u=!1;h.addEventListener("progress",y=>{if(u)return;const{loaded:z,total:L}=y.detail,q=Math.floor(Math.min(100,100*z/L));u=q===100,e.quiet||c(process.stdout,`Downloading WordPress ${q}%...`,u)}),r=await E.resolveWordPressRelease(e.wp)}l.logger.log(`Resolved WordPress release URL: ${r?.releaseUrl}`);const w=r&&m.join($,`prebuilt-wp-content-for-wp-${r.version}.zip`),v=r?b.existsSync(w)?F(w):await S(r.releaseUrl,`${r.version}.zip`,h):void 0,C={WP_DEBUG:!0,WP_DEBUG_LOG:!0,WP_DEBUG_DISPLAY:!1};l.logger.log("Booting WordPress..."),o=await E.bootWordPress({siteUrl:p,createPhpRuntime:async()=>await H.loadNodeRuntime(i.versions.php),wordPressZip:v,sqliteIntegrationPluginZip:Z(h),sapiName:"cli",createFiles:{"/internal/shared/ca-bundle.crt":A.rootCertificates.join(`
`)},constants:C,phpIniEntries:{"openssl.cafile":"/internal/shared/ca-bundle.crt",allow_url_fopen:"1",disable_functions:""},hooks:{async beforeWordPressFiles(u){e.mountBeforeInstall&&n(u,e.mountBeforeInstall)}}}),l.logger.log("Booted!");const R=await o.getPrimaryPhp();try{if(r&&!e.mountBeforeInstall&&!b.existsSync(w)&&(l.logger.log("Caching preinstalled WordPress for the next boot..."),b.writeFileSync(w,await I.zipDirectory(R,"/wordpress")),l.logger.log("Cached!")),e.mount&&n(R,e.mount),d=!0,i){const{php:u,reap:y}=await o.processManager.acquirePHPInstance();try{l.logger.log("Running the Blueprint..."),await B.runBlueprintSteps(i,u),l.logger.log("Finished running the blueprint")}finally{y()}}return e.command==="build-snapshot"?(await s(e.outfile),l.logger.log(`WordPress exported to ${e.outfile}`),process.exit(0)):e.command==="run-blueprint"?(l.logger.log("Blueprint executed"),process.exit(0)):l.logger.log(`WordPress is running on ${p}`),{requestHandler:o,server:t}}catch(u){if(!e.debug)throw u;const y=R.readFileAsText(l.errorLogPath);throw new Error(y,{cause:u})}},async handleRequest(t){return d?await o.request(t):x.PHPResponse.forHttpCode(502,"WordPress is not ready yet")}})}exports.runCLI=j;
//# sourceMappingURL=index.cjs.map
